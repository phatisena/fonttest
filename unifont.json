{"README.md":"## Acknowledgements\nThis project includes code from the `arcade-sprite-data` extension, developed by [microsoft]. \n- Repository: [www.github.com/microsoft/arcade-sprite-data](https://www.github.com/microsoft/arcade-sprite-data)\n- License: [MIT License]\n\n\n> You can view the extension owner's credits at [credit.md](CREDIT.md)\n\n> Open this page at [https://phatisena.github.io/unifont/](https://phatisena.github.io/unifont/)\n\n![unifont-logo](unifont-logo.png)\n\n> download the arcade extension file at [arcade-unifont-uf2](arcade-unifont.uf2)\n\n> This extension has a guide to import, which can be found at [file-import-guide](IMPORT_GUIDE.md)\n\n# Extension Highlight\n\n![collage-hightlight](20241121_063217_0000.png)\n\nThis extension highlight is a rough outline but can be viewed at [extension-hightlight](HIGHTLIGHT.md)\n","assets.json":"","main-data.ts":"namespace unidata {\n\n  export function mainfont(tid:string = \"\") {\n    unifont.setCharFromSheet(\n                    tid,\n                    img`\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        1111111111111111111111111111111111111111111111111111111111111111111111f1f11111111f111f1111111111111111111111111\n                        111111111111111111f1f11111111111111f11111111111111111111111f111111111f111f11111111f1f11111111111111111111111111\n                        11111111111f111111f1f11111f1f1111fffff11fff111f111f11111111f111111111f111f1111111fffff1111111111111111111111111\n                        fff1f1f1111f11111111111111f1f111f11f11f1f1f11f111f1f1111111111111111f11111f1111111f1f111111f1111111111111111111\n                        1f11fff1111f1111111111111fffff11f11f1111ff11f1111f1f1111111111111111f11111f111111f111f11111f1111111111111111111\n                        1f11f1f1111f11111111111111f1f1111fffff11111f111111f11111111111111111f11111f11111111111111fffff11111111111fffff1\n                        1f11f1f1111f1111111111111fffff11111f11f111f11ff11f1f1f11111111111111f11111f1111111111111111f1111111111111111111\n                        11111111111111111111111111f1f111f11f11f11f11f1f11f11f111111111111111f11111f1111111111111111f1111111f11111111111\n                        11111111111f11111111111111f1f1111fffff11f111fff111ff1f111111111111111f111f1111111111111111111111111f11111111111\n                        11111111111111111111111111111111111f111111111111111111111111111111111f111f111111111111111111111111f111111111111\n                        1111111111111111111111111111111111111111111111111111111111111111111111f1f11111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        1111111111111f1111fff111111f111111fff11111fff1111111f1111fffff1111fff1111fffff1111fff11111fff111111111111111111\n                        111111111111f1111f111f1111ff11111f111f111f111f11111ff1111f1111111f111f1111111f111f111f111f111f11111111111111111\n                        111111111111f1111ff11f11111f111111111f1111111f1111f1f1111f1111111f1111111111f1111f111f111f111f11111f1111111f111\n                        11111111111f11111f1f1f11111f11111111f111111ff1111f11f1111ffff1111ffff1111111f11111fff11111ffff11111f1111111f111\n                        1111111111f111111f11ff11111f1111111f111111111f111fffff1111111f111f111f11111f11111f111f1111111f11111111111111111\n                        111f111111f111111f111f11111f111111f111111f111f111111f1111f111f111f111f11111f11111f111f111f111f11111f1111111f111\n                        111f11111f11111111fff11111fff1111fffff1111fff1111111f11111fff11111fff11111f1111111fff11111fff111111f1111111f111\n                        1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f1111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        11111111111111111111111111fff11111ffff1111fff1111ffff11111fff1111ffff1111fffff111fffff1111fff1111f111f1111fff11\n                        1111ff11111111111ff111111f111f111f1111f11f111f111f111f111f111f111f111f111f1111111f1111111f111f111f111f11111f111\n                        11ff11111fffff11111ff11111111f11f11ff1f11f111f111f111f111f1111111f111f111f1111111f1111111f1111111f111f11111f111\n                        1f1111111111111111111f111111f111f1f1f1f11fffff111ffff1111f1111111f111f111fff11111fff11111f11ff111fffff11111f111\n                        11ff11111fffff11111ff111111f1111f11fff111f111f111f111f111f1111111f111f111f1111111f1111111f111f111f111f11111f111\n                        1111ff11111111111ff11111111111111f1111111f111f111f111f111f111f111f111f111f1111111f1111111f111f111f111f11111f111\n                        111111111111111111111111111f111111fffff11f111f111ffff11111fff1111ffff1111fffff111f11111111fff1111f111f1111fff11\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        11111f111f111f111f1111111f111f111f111f1111fff1111ffff11111fff1111ffff11111fff1111fffff111f111f111f111f111f111f1\n                        11111f111f11f1111f1111111ff1ff111ff11f111f111f111f111f111f111f111f111f111f111f11111f11111f111f111f111f111f1f1f1\n                        11111f111f1f11111f1111111f1f1f111f1f1f111f111f111f111f111f111f111f111f111f111111111f11111f111f111f111f111f1f1f1\n                        11111f111ff111111f1111111f111f111f11ff111f111f111ffff1111f111f111ffff11111fff111111f11111f111f1111f1f1111f1f1f1\n                        1f111f111f1f11111f1111111f111f111f111f111f111f111f1111111f1f1f111f111f1111111f11111f11111f111f1111f1f11111f1f11\n                        1f111f111f11f1111f1111111f111f111f111f111f111f111f1111111f11f1111f111f111f111f11111f11111f111f1111f1f11111f1f11\n                        11fff1111f111f111fffff111f111f111f111f1111fff1111f11111111ff1f111f111f1111fff111111f111111fff111111f111111f1f11\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        1111111111111111111111111111fff111111111fff11111111f11111111111111f11111111111111111111111111111111111111111111\n                        1111111111111111111111111111f1111111111111f1111111f1f11111111111111f1111111111111111111111111111111111111111111\n                        1f111f111f111f111fffff111111f1111f11111111f111111f111f111111111111111111111111111f1111111111111111111f111111111\n                        11f1f1111f111f1111111f111111f11111f1111111f11111111111111111111111111111111111111f1111111111111111111f111111111\n                        11f1f11111f1f1111111f1111111f11111f1111111f111111111111111111111111111111ffff1111f1ff11111fff11111ff1f1111fff11\n                        111f111111f1f111111f11111111f111111f111111f1111111111111111111111111111111111f111ff11f111f111f111f11ff111f111f1\n                        11f1f111111f111111f111111111f1111111f11111f1111111111111111111111111111111ffff111f111f111f1111111f111f111fffff1\n                        11f1f111111f11111f1111111111f1111111f11111f111111111111111111111111111111f111f111f111f111f111f111f111f111f11111\n                        1f111f11111f11111fffff111111f11111111f1111f1111111111111111111111111111111ffff111ffff11111fff11111ffff1111ffff1\n                        1111111111111111111111111111f1111111111111f11111111111111111111111111111111111111111111111111111111111111111111\n                        1111111111111111111111111111fff111111111fff11111111111111fffff1111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        1111ff11111111111f111111111f1111111f11111f11111111f111111111111111111111111111111111111111111111111111111111111\n                        111f1111111111111f111111111f1111111f11111f11111111f111111111111111111111111111111111111111111111111111111111111\n                        11fff11111ff1f111f1ff11111111111111111111f11f11111f111111ff1f1111f1ff11111fff1111f1ff11111ffff111f1ff11111ffff1\n                        111f11111f11ff111ff11f11111f1111111f11111f1f111111f111111f1f1f111ff11f111f111f111ff11f111f111f111ff11f111f11111\n                        111f11111f111f111f111f11111f1111111f11111ff1111111f111111f1f1f111f111f111f111f111f111f111f111f111f11111111fff11\n                        111f111111ffff111f111f11111f1111111f11111f1f111111f111111f1f1f111f111f111f111f111ffff11111ffff111f11111111111f1\n                        111f111111111f111f111f11111f1111111f11111f11f111111f11111f1f1f111f111f1111fff1111f11111111111f111f1111111ffff11\n                        111111111ffff111111111111111111111f1111111111111111111111111111111111111111111111f11111111111f11111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111f11111111111f11111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111fff111111111111111111\n                        1111111111111111111111111111111111111111111111111111111111111ff1111f11111ff111111111111111f1f111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111f111111f1111111f11111111111111fff111111111111111111\n                        11f111111111111111111111111111111111111111111111111111111111f111111f1111111f111111111111111111111fffff111fffff1\n                        11f111111111111111111111111111111111111111111111111111111111f111111f1111111f11111111111111111111f11111f1f11111f\n                        1ffff1111f111f111f111f111f111f111f111f111f111f111fffff111111f111111f1111111f1111111ff1f111111111f1fff1f1f1fff1f\n                        11f111111f111f111f111f111f1f1f1111f1f1111f111f111111f11111ff1111111f11111111ff1111f1ff1111111111f1f111f1f1ff11f\n                        11f111111f111f1111f1f1111f1f1f11111f111111f1f111111f11111111f111111f1111111f11111111111111111111f1fff1f1f1f1f1f\n                        11f111111f111f1111f1f11111f1f11111f1f11111f1f11111f111111111f111111f1111111f11111111111111111111f11111f1f11111f\n                        111ff11111ffff11111f111111f1f1111f111f11111f11111fffff111111f111111f1111111f111111111111111111111fffff111fffff1\n                        111111111111111111111111111111111111111111f11111111111111111f111111f1111111f11111111111111111111111111111111111\n                        11111111111111111111111111111111111111111f1111111111111111111ff1111f11111ff111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                    `,\n                    \"™!\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°©®\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    8,\n                    16,\n                    1,\n                    0,\n                    15,\n                    3\n                )\n                unifont.setCharFromSheet(\n                    tid,\n                    img`\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        11fff1111ff11f111f1f1f1111fff11111f1f1111f1f11f11111ff1111fff1111fff11111ff11f111f1f1f111ff11f111ff11f1111fff11\n                        1f111f111f1f1f111fff1f111f111f111f1f1f111fff11f111111f111f111f11f111f1111f1f1f111fff1f11f11f1f11f11f1f111f111f1\n                        11f11f11111f1f11111f1f111f111f111f111f11111f11f11f111f1111111f111111f111111ff111111ff1111f1f1f111f1f1f1111f11f1\n                        1f111f1111f11f1111f11f111fff1f111fff1f11111f11f111f11f1111ff1f11ff11f11111f11f1111f11f11f11f1f11f11f1f1111f11f1\n                        1f111f111f111f111f111f111f111f111f111f11111f11f1111f1f11111f1f111f11f1111f111f111f111f11f11f1f11f11f1f1111f11f1\n                        1f111f111f111f111f111f111f111f111f111f1111fff1f11111ff11111f1f111f1fff111f111f111f111f11f1ffff11ff1f1f111ff11f1\n                        1f111f1111fff11111fff1111f111f111f111f1111ff1ff111111f111111ff111ff1ff1111fff11111fff111f1ff1f11ff1fff111ff11f1\n                        1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f1\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113113111fffff1\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111113331111fff1f1\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f111111111\n                        11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f111111111\n                        11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f111111111\n                        11fff11111fff111f1f1ff11f11f1f111ff11f1111fff11111f1f11111fff111ff1ff11111ffff11ff11f111ff111f11ff111f111ff11f1\n                        1f111f111fff1111ffff11f1ffff1f11f11f1f111f111f111f1f1f111f111f111ff11f111f1111111f11f1111f111f111f111f111f111f1\n                        11f11f111111f11111f111f1f11f1f111f1f1f111f111f111f111f1111f11f111f111f1111ffff111f11f1111f111f111f111f111f111f1\n                        11f11f111ff1f11111f111f1f11f1f11f11f1f111fff1f111fff1f111f111f111f111f1111111f111f11f1111f111f111f111f111f111f1\n                        11f11f1111f1f11111f111f1f11f1f11f11f1f111f1f1f111f1f1f111f111f111f111f1111f11f111f11f1111f111f111f111f111f1f1f1\n                        1ff11f1111f1f11111f111f1f1ffff11ff1ffff11f1f1f111f1f1f111ff11f111f111f1111f11f111f1fff111f111f111f111f111ff1ff1\n                        1ff11f1111ff111111f111f1f1ff1f11ff1f1ff11ff11f111ff11f111ff11f111f111f1111ffff111ff1ff111fffff111fffff111f111f1\n                        11111f111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        1ff1ff111331311111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        1f1f1f111313311111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        11111f111111111111111f11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        11111f111111111111111f1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f\n                        11111f111111111111111f1111111111111111111111111111111111111111111111111111111f111111111111111f111111111111111f1\n                        1ff11f11ff111f11ff111f1111fff111ff11f111ff11f11111ff111111fff11111fff11111fff111ff111f1111fff111ff11ff11ff11ff1\n                        1f111f111f111f111f111f111f111f111f11f111f111f1111f11f1111f111f111f111f111f1f1f111f111f111f1f1f111f11f1111f111f1\n                        1f111f111f1f1f111f1f1f1111f11f111f11f111f111f11111f1111111111f1111111f111f111f111f1f1f1111111f111f1f1f111f1f1f1\n                        1f111f111f1f1f111f1f1f1111f11f111f11f1111ff1f111111f111111ff1f1111111f111fff1f111f1ffff111ff1f111ff11f111f1f1f1\n                        1f1f1f111ff1ff111ff1ff1111f11f111f11f111f111f111111f11111f11ff1111111f111f111f111f111f111f11ff111f111f111ff1ff1\n                        1ff1ff111ff1ff111ff1ff111ff11f11fff1f111f111f111111f11111f111f111111ff111f111f111f111f111f111f111f111f111ff1ff1\n                        1f111f111f111f111f111f111ff11f11ff1ff111fffff11111ff11111ff11f111111ff111f111f111fffff111ff11f111f111f111f111f1\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        11111111111111111111111111111111111111111111111111fff11111ff11111f11f111111111111111111111111111111111111111111\n                        1111111111111111111111111111111111111111111111111f1111111f11f1111f1ff1111111111111111111111111111111111111111f1\n                        11111111111111111111111111111111111111111111111111f111111f11f11111f1f1111111111111111111111111111f111f111ffff11\n                        111111111111111111111111111111111111111111111111111f111111f1f1111111f1111111111111111111111111111ffff1111ff1ff1\n                        1111111111111f1111111111111111111111111111111111111f11111111f1111111f111111111111111111111111111111111111111111\n                        11fff1111ffff1111111111111fff1111111f1111f11f111111f11111111f1111111f11111fff11111fff11111fff111111111111111111\n                        1f111f111fff1f111ff11f111f111f111111f1111f11f111111f11111111f1111111f1111f111f111f111f111f111f11111111111111111\n                        11111f1111111f1111fff11111111f111111f1111f11f111111f11111111f1111111f11111f11f1111f11f1111111f11111111111111111\n                        1ff11f111ff11f111111111111111f111111f1111f11f111111f11111111f1111111f1111f111f1111f11f1111111f11111111111111111\n                        1f111f111f111f111ff11f1111111f111111f1111f11f111111f11111111f1111111f1111f111f1111f11f1111111f11111111111111111\n                        1f111f111f111f1111fff11111111f111111ff111ff1ff11111ff1111111ff111111ff111ff11f111ff11f1111111f11111111111111111\n                        1fffff111fffff111111111111111f111111ff111ff1ff11111ff1111111ff111111ff111ff11f111ff11f1111111f11111111111111111\n                        11111111111111111111111111111111111111111111111111111111111111111111111111111f1111111f1111111f11111111111111111\n                        11111111111111111111111111111111111111111111111111111111111111111111111111111f1111111f1111111f11111111111111111\n                        11111111111111111111111111111111111111111111111111111111111111111111111111111f1111111f1111111f11111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        11111111111111111111111111111111111111111111111111111111111ff111111f111111ff11111fff1f11111f1111111111111111111\n                        11ff11111111111111111f111111ff11111f1f111111111111111111111f1111111f1111111ff1111f1ff11111fff111ff1111111111111\n                        11ff11111fffff111fffff111fffff111fffff11111111111111111111111111111111111111111111111111111f1111ff1111111111111\n                        11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f111\n                        1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111fff11ffff11\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f111f1f1f1f1\n                        1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f1f1f1f1\n                        1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f1ffff11\n                        1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f1f1f1f1\n                        1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f1f1f1f1\n                        1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f1ffff11\n                        11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f111\n                        111111111111111111111111111111111111111111ff111111f1f1111111111111111111111111111111111111111111111111111111111\n                        1111111111111111111111111111111111111111111f1111111ff1111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        1111111111111111f1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        11111111111111111f111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        11111111111111111f111111111111111111f11111f1f1111f111111111111f111111f1111111f111111111111111111111111111111111\n                        1ffff1111ffff1111f1f1f111ff1f1111fff11111fff111111f111111f1f11f111fff1111111f1111111111111111111111111111111111\n                        f1111f11f1111f111f1fff11f11f1f11f1111111f1111111111ff111f1f1f1f11f1111111fff11111111111111111111111111111111111\n                        f1111f11f1ff1f111f111f11f11f1f11f1111111f111111111111f11f1f1f1f1f1111111f11f11111111111111111111111111111111111\n                        f1111f11f1ff1f111f111f11f11f1f11f1ff1111f1ff11111ff11f11f1f1f1f1f111f111f111f1111111111111111111111111111111111\n                        f1111f11f11f1f111f111f11f11f1f11f1f11111f1f111111f111f11f1f1f1f1f1f1f111ff11f1111111111111111111111111111111111\n                        1ffff1111ff11f111fffff11ff1f1f111ffff1111ffff11111fff111f1f1ff111f1ff111ff111f111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                        111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n                    `,\n                    \"กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรลวศษสหฬอฮะาเแโใไฤฦๅั็ํิีึืุู์่้๊๋ำ฿๐๑๒๓๔๕๖๗๘๙\",\n                    \"ั็ํิีึืุู์่้๊๋\",\n                    \"ั็ํิีึื์่้๊๋\",\n                    \"ำ\",\n                    8,\n                    16,\n                    1,\n                    0,\n                    15,\n                    3\n                )\n                unifont.setCharArrFromSheet(\n                    tid,\n                    img`\n    111f1111111ff111111ff1111111f1111111f111111ff111111ff1111111f111111f111111ff111111ff1111111f1111111f1111111ff11\n    111f11111111ff11111f1f11111fff111111f1111111ff11111f1f11111fff11111f1111111ff11111f1f11111fff111111f11111111ff1\n    1111111111111111111111111111f1111111111111111111111111111111f1111111f11111111f1111111f11111f1f11111111111111111\n    1f111f111f111f111f111f111f111f11111ff111111ff111111ff111111ff111ffff11111ffff1111ffff1111ffff111111111111111111\n    1ffff1111ffff1111ffff1111ffff111111ff111111ff111111ff111111ff111ff1ff1111ff1ff111ff1ff111ff1ff11fffff1111fffff1\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111ff111111f1111111f111111ff111111ff1111111f11111111f111111ff111111ff111111f1111111f111111ff111111ff1111111f111\n    111f1f1111fff111111f1111111ff11111f1f11111fff1111111f1111111ff11111f1f1111fff111111f1111111ff11111f1f11111fff11\n    11111111111f1111111111111111111111111111111f1111111111111111111111111111111f1111111111111111111111111111111f111\n    11111111111111111111f1111111f1111111f1111111f1111111ff111111ff111111ff111111ff1111f1f11111f1f11111f1f11111f1f11\n    1fffff11fffff111fffff111fffff111fffff111fffff1111fffff111fffff111fffff111fffff11fffff111fffff111fffff111fffff11\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    11f11111ff111111ff1111111f1111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    11f111111ff11111f1f11111fff111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    1111111111111111111111111f1111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    1ff111111ff111111ff111111ff111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    1ff111111ff111111ff111111ff111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    11111ff111111ff111111ff111111ff11fff1ff11fff1ff1111111111111111111111111111111111111111111111111111111111111111\n    1111f11f1111f11f1111f11f1111f11ff111f11ff111f11f111111111111111111111111111111111111111111111111111111111111111\n    1111111f1111111f1111111f1111111f1f11f11f1f11f11f111111111111111111111111111111111111111111111111111111111111111\n    1111111f1111111f1111111f1111111ff111f11f1f11f11f111111111111111111111111111111111111111111111111111111111111111\n    1111111f1111111f1111111f1111111ff111f11f1f11f11f111111111111111111111111111111111111111111111111111111111111111\n    1111111f1111111f1111111f1111111fff11f11fff11f11f111111111111111111111111111111111111111111111111111111111111111\n    1111111f1111111f1111111f1111111fff11f11fff11f11f111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111f11f1111f11f111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111f11f1111f11f111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111f11f1111f11f111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n    `,\n                    [\n                        \"ั่\",\n                        \"ั้\",\n                        \"ั๊\",\n                        \"ั๋\",\n                        \"ํ่\",\n                        \"ํ้\",\n                        \"ํ๊\",\n                        \"ํ๋\",\n                        \"็่\",\n                        \"็้\",\n                        \"็๊\",\n                        \"็๋\",\n                        \"ิ่\",\n                        \"ิ้\",\n                        \"ิ๊\",\n                        \"ิ๋\",\n                        \"ี่\",\n                        \"ี้\",\n                        \"ี๊\",\n                        \"ี๋\",\n                        \"ึ่\",\n                        \"ึ้\",\n                        \"ึ๊\",\n                        \"ึ๋\",\n                        \"ื่\",\n                        \"ื้\",\n                        \"ื๊\",\n                        \"ื๋\",\n                        \"่ำ\",\n                        \"้ำ\",\n                        \"๊ำ\",\n                        \"๋ำ\",\n                        \"ฤๅ\",\n                        \"ฦๅ\"\n                    ],\n                    [\n                        \"ั่\",\n                        \"ั้\",\n                        \"ั๊\",\n                        \"ั๋\",\n                        \"ํ่\",\n                        \"ํ้\",\n                        \"ํ๊\",\n                        \"ํ๋\",\n                        \"็่\",\n                        \"็้\",\n                        \"็๊\",\n                        \"็๋\",\n                        \"ิ่\",\n                        \"ิ้\",\n                        \"ิ๊\",\n                        \"ิ๋\",\n                        \"ี่\",\n                        \"ี้\",\n                        \"ี๊\",\n                        \"ี๋\",\n                        \"ึ่\",\n                        \"ึ้\",\n                        \"ึ๊\",\n                        \"ึ๋\",\n                        \"ื่\",\n                        \"ื้\",\n                        \"ื๊\",\n                        \"ื๋\"\n                    ],\n                    [\n                        \"ั่\",\n                        \"ั้\",\n                        \"ั๊\",\n                        \"ั๋\",\n                        \"ํ่\",\n                        \"ํ้\",\n                        \"ํ๊\",\n                        \"ํ๋\",\n                        \"็่\",\n                        \"็้\",\n                        \"็๊\",\n                        \"็๋\",\n                        \"ิ่\",\n                        \"ิ้\",\n                        \"ิ๊\",\n                        \"ิ๋\",\n                        \"ี่\",\n                        \"ี้\",\n                        \"ี๊\",\n                        \"ี๋\",\n                        \"ึ่\",\n                        \"ึ้\",\n                        \"ึ๊\",\n                        \"ึ๋\",\n                        \"ื่\",\n                        \"ื้\",\n                        \"ื๊\",\n                        \"ื๋\"\n                    ],\n                    [\n                        \"่ำ\",\n                        \"้ำ\",\n                        \"๊ำ\",\n                        \"๋ำ\"\n                    ],\n                    8,\n                    16,\n                    1,\n                    0,\n                    0,\n                    0\n                )                    \n  }\n\n  export function arcadefont(tid:string = \"\") {\n    unifont.setCharFromSheet(\n                    tid,\n                    img`\n            111111111f1f11111f1f111111f11111ff11f111111111111f1111111f111111f1111111f111f1111111111111111111111111111111111\n            1f1111111f1f11111f1f11111ffff111ff1f1111ff1111111f111111f11111111f1111111f1f11111111111111111111111111111111111\n            1f11111111111111fffff111f1f11111111f1111f1f1111111111111f11111111f111111fffff11111f1111111111111111111111111111\n            1f111111111111111f1f11111fff111111f111111f11111111111111f11111111f1111111f1f111111f1111111111111111111111111111\n            1f11111111111111fffff11111f1f1111f111111f1f1f11111111111f11111111f111111f111f111fffff11111111111fffff1111111111\n            11111111111111111f1f1111ffff11111f1ff111f11f111111111111f11111111f1111111111111111f11111ff11111111111111ff11111\n            1f111111111111111f1f111111f11111f11ff1111ff1f111111111111f111111f11111111111111111f111111f11111111111111ff11111\n            1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f1111111111111111111111\n            1111f1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111f11111ff111111f1111111ff111111ff11111111f1111ffff11111ff11111ffff11111ff111111ff1111111111111111111111111111\n            111f1111f11f1111ff111111f11f1111f11f111111ff1111f1111111f11f1111111f1111f11f1111f11f1111ff111111ff111111111ff11\n            11f11111f1ff11111f111111111f111111f111111f1f1111fff11111fff11111111f11111ff11111f11f1111ff111111ff1111111ff1111\n            1f111111ff1f11111f11111111f11111111f1111f11f1111111f1111f11f111111f11111f11f11111fff11111111111111111111f111111\n            1f111111f11f11111f1111111f111111f11f1111fffff111f11f1111f11f11111f111111f11f1111f11f1111ff111111ff1111111ff1111\n            f11111111ff11111fff11111ffff11111ff11111111f11111ff111111ff111111f1111111ff111111ff11111ff1111111f111111111ff11\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111f11111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            11111111111111111fff11111fff11111ff11111fff111111ff11111fff11111ffff1111ffff11111ff11111f11f1111fff11111111f111\n            11111111ff111111f111f111f111f111f11f1111f11f1111f11f1111f11f1111f1111111f1111111f11f1111f11f11111f111111111f111\n            fffff11111ff1111111f1111f1f1f111f11f1111fff11111f1111111f11f1111fff11111fff11111f1111111ffff11111f111111111f111\n            111111111111f11111f11111f1ff1111ffff1111f11f1111f1111111f11f1111f1111111f1111111f1ff1111f11f11111f111111111f111\n            fffff11111ff111111111111f1111111f11f1111f11f1111f11f1111f11f1111f1111111f1111111f11f1111f11f11111f111111f11f111\n            11111111ff11111111f111111ffff111f11f1111fff111111ff11111fff11111ffff1111f11111111ff11111f11f1111fff111111ff1111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            f11f1111f1111111f111f111f11f11111ff11111fff111111ff11111fff111111ff11111fffff111f11f1111f111f111f111f111f111f11\n            f1f11111f1111111ff1ff111ff1f1111f11f1111f11f1111f11f1111f11f1111f11f111111f11111f11f1111f111f111f1f1f1111f1f111\n            ff111111f1111111f1f1f111f1ff1111f11f1111f11f1111f11f1111f11f11111f11111111f11111f11f1111f111f111f1f1f11111f1111\n            ff111111f1111111f1f1f111f11f1111f11f1111fff11111ff1f1111fff1111111f1111111f11111f11f11111f1f1111f1f1f11111f1111\n            f1f11111f1111111f111f111f11f1111f11f1111f1111111f1f11111f11f1111f11f111111f11111f11f11111f1f11111f1f11111f1f111\n            f11f1111ffff1111f111f111f11f11111ff11111f11111111f1f1111f11f11111ff1111111f111111ff1111111f111111f1f1111f111f11\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            1111111111111111ff111111f1111111ff111111111111111f111111f111111111111111111111111111111111111111111111111111111\n            f111f111ffff1111f11111111f1111111f11111111111111f1f111111f11111111111111f111111111111111111f11111111111111f1111\n            f111f111111f1111f11111111f1111111f11111111111111f1f111111111111111111111f111111111111111111f1111111111111f1f111\n            1f1f111111f11111f111111111f111111f1111111111111111111111111111111fff1111fff111111fff11111fff11111ff111111f11111\n            11f111111f111111f1111111111f11111f111111111111111111111111111111f11f1111f11f1111f1111111f11f1111f1ff1111fff1111\n            11f11111f1111111f1111111111f11111f111111111111111111111111111111f11f1111f11f1111f1111111f11f1111ff1111111f11111\n            11f11111ffff1111ff1111111111f111ff111111fffff11111111111111111111fff1111fff111111fff11111fff11111fff11111f11111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            11111111111111111f11111111f11111f1111111ff111111111111111111111111111111111111111111111111111111111111111f11111\n            1fff1111111111111111111111111111f11111111f111111111111111111111111111111fff111111fff111111111111111111111f11111\n            f11f1111fff11111ff1111111ff11111f1f111111f111111ff1f1111fff111111ff11111f11f1111f11f1111f1f111111fff1111fff1111\n            f11f1111f11f11111f11111111f11111ff1111111f111111f1f1f111f11f1111f11f1111f11f1111f11f1111ff1f1111ff1111111f11111\n            1fff1111f11f11111f111111f1f11111f1f111111f111111f1f1f111f11f1111f11f1111fff111111fff1111f111111111ff11111f1f111\n            f11f1111f11f1111fff111111f111111f11f1111fff11111f1f1f111f11f11111ff11111f1111111111f1111f1111111fff1111111f1111\n            1ff111111111111111111111111111111111111111111111111111111111111111111111f1111111111f111111111111111111111111111\n            1111111111111111111111111111111111111111111111111ff11111f1111111ff111111111111111111111111111111111111111111111\n            1111111111111111111111111111111111111111111111111f111111f11111111f111111111111111111111111111111111111111111111\n            11111111111111111111111111111111f11f1111111111111f111111f11111111f111111111111111111111111111111111111111111111\n            f11f1111f111f111f111f111f11f1111f11f1111ffff1111ff111111f11111111ff111111ff1f1111111111111111111111111111111111\n            f11f1111f111f111f1f1f1111ff11111f11f111111f111111f111111f11111111f111111f1ff11111111111111111111111111111111111\n            f11f11111f1f1111f1f1f1111ff111111fff11111f1111111f111111f11111111f111111111111111111111111111111111111111111111\n            1fff111111f111111f1f1111f11f1111f11f1111ffff11111ff11111f1111111ff111111111111111111111111111111111111111111111\n            111111111111111111111111111111111ff1111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n            111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\n        `,\n                    \"!\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\",\n                    \"\",\n                    \"\",\n                    \"\",\n                    8,\n                    8,\n                    1,\n                    0,\n                    0,\n                    0\n                )\n  }\n  \n}\n\n","main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"></xml>","main.ts":"\nnamespace SpriteKind {\n    export const _unifont = SpriteKind.create()\n    export const _unisrc = SpriteKind.create()\n}\n//%block=\"UniFont\"\n//%color=\"#12d48a\" \n//%icon=\"\\uf031\"\n//%group=\"[]\"\n//%weight=10\nnamespace unifont {\n\n    let rendering = false;let tablename: string[] = []; let ligs: string[][] = []; let ligages: Image[][] = []; let ligwidth: number[][] = []; let ligsubw: number[][] = []; let ligdir: number[][] = []; let ligcol: number[][] = []; let ligul: number[][] = []; let storeid: number[] = []; let letterspace: number = 1; let curid = 0; let lineheight = 1;\n\n    export function gettableid(name: string) {\n        if (tablename.indexOf(name) < 0) {\n        tablename.push(name); storeid.push(curid); ligs.push([]); ligages.push([]); ligwidth.push([]); ligsubw.push([]); ligdir.push([]); ligcol.push([]); ligul.push([]); curid += 1;\n        return tablename.length - 1\n        }\n        return tablename.indexOf(name)\n    }\n\n    export function drawTransparentImage(src: Image, to: Image, x: number, y: number) {\n        if (!src || !to) { return; }\n        to.drawTransparentImage(src, x, y)\n    }\n\n    export function findCommand(tvj: string, chj: string = \"\", nvj: number): boolean {\n        if (((nvj < tvj.length && tvj.charAt(nvj)) && (nvj + 1 < tvj.length && tvj.charAt(nvj + 1) == \"\\\\\")) && ((nvj + 2 < tvj.length && chj.length <= 0))) { return true }\n        if (chj.length != 1) { return false }\n        if (((nvj + 1 < tvj.length && tvj.charAt(nvj + 1) == \"\\\\\")) && ((nvj + 2 < tvj.length && tvj.charAt(nvj + 2) == chj))) { return true }\n        return false\n    }\n\n    export function deepChar(tid: number = 0, idx: number = 0, charstr: string = \"\") {\n        let ustr = charstr.charAt(idx)\n        let ic = 1\n        let uc = charstr.charAt(idx + ic)\n        let istr = \"\" + ustr + uc\n        if (ligs[tid].indexOf(istr) < 0) { return ustr }\n        while (ligs[tid].indexOf(istr) >= 0) {\n            ustr = \"\" + ustr + uc\n            ic++\n            uc = charstr.charAt(idx + ic)\n            istr = \"\" + ustr + uc\n            if (idx + ic >= charstr.length) { break }\n        }\n        return ustr\n    }\n    \n    export function drawOutline(Inputi: Image, color: number, dir8: boolean) {\n        let dxl: number[] = [1,0,-1,0]\n        let dyl: number[] = [0,1,0,-1]\n        if (dir8) {\n            dxl = [1,1,1,0,-1,-1,-1,0]\n            dyl = [1,0,-1,-1,-1,0,1,1]\n        }\n        let Uinputi = Inputi.clone()\n        for (let curcol = 1;curcol < 16; curcol++) {\n            Uinputi.replace(curcol,color)\n        }\n        let Outputi = image.create(Inputi.width+2,Inputi.height+2)\n        for (let curdir = 0; curdir < Math.min(dxl.length,dyl.length); curdir++) {\n            drawTransparentImage(Uinputi,Outputi,1+dxl[curdir],1+dyl[curdir])\n        }\n        drawTransparentImage(Inputi,Outputi,1,1)\n        return Outputi\n    }\n\n    export function SetImgFrame(ImgF: Image, Wh: number, Ht: number) {\n        let ImgOutput = image.create(Wh, Ht)\n        let Twidt = Math.floor(ImgF.width / 3)\n        let Theig = Math.floor(ImgF.height / 3)\n        let ImgTable: Image[] = []\n        let Uimg: Image = null\n        let sw = 0\n        let sh = 0\n        for (let hj = 0; hj < 3; hj++) {\n            for (let wi = 0; wi < 3; wi++) {\n                Uimg = image.create(Twidt, Theig)\n                drawTransparentImage(ImgF, Uimg, 0 - wi * Twidt, 0 - hj * Theig)\n                ImgTable.push(Uimg.clone())\n            }\n        }\n        for (let wi = 0; wi < Math.floor(Wh / Twidt); wi++) {\n            for (let hj = 0; hj < Math.floor(Ht / Theig); hj++) {\n                sw = Math.min(wi * Twidt, Wh - Twidt)\n                sh = Math.min(hj * Theig, Ht - Theig)\n                if (hj == 0 && wi == 0) {\n                    drawTransparentImage(ImgTable[0], ImgOutput, sw, sh)\n                } else if (hj == Math.floor(Ht / Theig) - 1 && wi == Math.floor(Wh / Twidt) - 1) {\n                    drawTransparentImage(ImgTable[8], ImgOutput, sw, sh)\n                } else if (hj == Math.floor(Ht / Theig) - 1 && wi == 0) {\n                    drawTransparentImage(ImgTable[6], ImgOutput, sw, sh)\n                } else if (hj == 0 && wi == Math.floor(Wh / Twidt) - 1) {\n                    drawTransparentImage(ImgTable[2], ImgOutput, sw, sh)\n                } else {\n                    if (wi > 0 && wi < Math.floor(Wh / Twidt) - 1) {\n                        if (hj == 0) {\n                            drawTransparentImage(ImgTable[1], ImgOutput, sw, sh)\n                        } else if (hj == Math.floor(Ht / Theig) - 1) {\n                            drawTransparentImage(ImgTable[7], ImgOutput, sw, sh)\n                        } else {\n                            drawTransparentImage(ImgTable[4], ImgOutput, sw, sh)\n                        }\n                    } else if (hj > 0 && hj < Math.floor(Ht / Theig) - 1) {\n                        if (wi == 0) {\n                            drawTransparentImage(ImgTable[3], ImgOutput, sw, sh)\n                        } else if (wi == Math.floor(Wh / Twidt) - 1) {\n                            drawTransparentImage(ImgTable[5], ImgOutput, sw, sh)\n                        } else {\n                            drawTransparentImage(ImgTable[4], ImgOutput, sw, sh)\n                        }\n                    } else {\n                        drawTransparentImage(ImgTable[4], ImgOutput, sw, sh)\n                    }\n                }\n            }\n        }\n        return ImgOutput\n    }\n\n    export function background(then: () => void) {\n        control.runInBackground(then)\n    }\n\n    export function after(time: number, thenDo: () => void) {\n        setTimeout(thenDo, time)\n    }\n\n    //%block=\"$name\"\n    //%blockId=unifont_tablenameshadow\n    //%blockHidden=true shim=TD_ID\n    //%name.fieldEditor=\"autocomplete\" name.fieldOptions.decompileLiterals=true\n    //%name.fieldOptions.key=\"tablenameshadow\"\n    export function _tableNameShadow(name: string) {\n        return name\n    }\n\n    /**\n     * add charcter glyph to the table\n     */\n    //%blockid=unifont_setcharecter\n    //%block=\"set |table id $gid and set letter $glyph to img $imgi=screen_image_picker||and |the letter can move? $notmove and stay on or under the letter? $onthechar and substract width $inchar erase col $bcol spacebar col $scol base col $mcol guard col $ncol\"\n    //%gid.shadow=unifont_tablenameshadow gid.defl=\"fonttemp\"\n    //%bcol.shadow=colorindexpicker\n    //%scol.shadow=colorindexpicker\n    //%mcol.shadow=colorindexpicker\n    //%ncol.shadow=colorindexpicker\n    //%group=\"create\"\n    //%weight=2\n    export function setCharecter(gid: string = \"fonttemp\", glyph: string = \"\", imgi: Image = image.create(5, 8), notmove: boolean = false, onthechar: boolean = false, inchar: boolean = false, bcol: number = 0, scol: number = 0, mcol: number = 0, ncol: number = 0) {\n        let tid = gettableid(gid)\n        let sncol = true; let scnwidt = true; let scwidt = false; let wi = 0; let wj = 0; let si = 0; let imgj = image.create(imgi.width, imgi.height);\n        if (bcol > 0 && bcol < 16) {\n            imgi.replace(bcol, 0)\n        }\n        for (let xw = 0; xw < imgi.width; xw++) {\n            si = 0\n            for (let yh = 0; yh < imgi.height; yh++) {\n                if (imgi.getPixel(xw, yh) != 0 || (scwidt && imgi.getPixel(xw + 1, yh) != 0)) { si += 1 }\n            }\n            if (scnwidt) {\n                if (scwidt) {\n                    if (si <= 0) { wj = xw; scnwidt = false; }\n                } else {\n                    if (si > 0) { wi = xw; scwidt = true; }\n                }\n            }\n        }\n        if (scnwidt) { wj = imgi.width; scnwidt = false; }\n        imgj = image.create(Math.abs(wj - wi), imgi.height); drawTransparentImage(imgi, imgj, 0 - wi, 0);\n        if (scol > 0 && scol < 16) {\n            imgj.replace(scol, 0)\n        }\n        let uwid = 0\n        if (inchar) {\n            for (let xw = imgi.width - 1; xw >= 0; xw--) {\n                si = 0\n                for (let yh = 0; yh < imgi.height; yh++) {\n                    if (imgi.getPixel(xw, yh) != 0) { si += 1 }\n                }\n                if (scnwidt) {\n                    if (scwidt) {\n                        if (si <= 0) { wj = xw; scnwidt = false; }\n                    } else {\n                        if (si > 0) { wi = xw; scwidt = true; }\n                    }\n                }\n            }\n            if (scnwidt) { wj = imgi.width; scnwidt = false; }\n            uwid = Math.abs(wj - wi)\n        }\n\n        if (ligs[tid].indexOf(glyph) < 0) {\n            ligul[tid].push(ncol)\n            ligcol[tid].push(mcol)\n            ligs[tid].push(glyph); ligages[tid].push(imgj);\n            if (notmove) {\n                if (onthechar) {\n                    ligdir[tid].push(10)\n                } else {\n                    ligdir[tid].push(-10)\n                }\n                ligwidth[tid].push(0)\n                ligsubw[tid].push(0)\n            } else {\n                if (uwid == 0) {\n                    ligsubw[tid].push(imgj.width)\n                } else {\n                    ligsubw[tid].push(uwid)\n                }\n                ligwidth[tid].push(imgj.width)\n                ligdir[tid].push(0)\n            }\n        } else {\n            ligul[tid][ligs[tid].indexOf(glyph)] = ncol\n            ligcol[tid][ligs[tid].indexOf(glyph)] = mcol\n            ligages[tid][ligs[tid].indexOf(glyph)] = imgj\n            if (notmove) {\n                if (onthechar) {\n                    ligdir[tid][ligs[tid].indexOf(glyph)] = 10\n                } else {\n                    ligdir[tid][ligs[tid].indexOf(glyph)] = -10\n                }\n                ligwidth[tid][ligs[tid].indexOf(glyph)] = 0\n                ligsubw[tid][ligs[tid].indexOf(glyph)] = 0\n            } else {\n                if (uwid == 0) {\n                    ligsubw[tid][ligs[tid].indexOf(glyph)] = imgj.width\n                } else {\n                    ligsubw[tid][ligs[tid].indexOf(glyph)] = uwid\n                }\n                ligwidth[tid][ligs[tid].indexOf(glyph)] = imgj.width\n                ligdir[tid][ligs[tid].indexOf(glyph)] = 0\n            }\n        }\n    }\n\n    /**\n     * add more glyph\n     * from charcter sheet\n     * to the table\n     */\n    //%blockid=unifont_setcharfromimgsheet\n    //%block=\"set |table id $tid and set img sheet $PngSheet=screen_image_picker with letters $GroupChar||and |staying letters $StayChar letters on the letters $CharOnChar and Char Substact $CharSubW width $twid height $thei erase col $bcl space col $scl base col $mcl guard col $ncl\"\n    //%tid.shadow=unifont_tablenameshadow tid.defl=\"fonttemp\"\n    //%bcl.shadow=colorindexpicker\n    //%scl.shadow=colorindexpicker\n    //%mcl.shadow=colorindexpicker\n    //%ncl.shadow=colorindexpicker\n    //%group=\"create\"\n    //%weight=4\n    export function setCharFromSheet(tid: string = \"fonttemp\", PngSheet: Image = image.create(10, 16), GroupChar: string = \"\", StayChar: string = \"\", CharOnChar: string = \"\", CharSubW: string = \"\", twid: number = 5, thei: number = 8, bcl: number = 0, scl: number = 0, mcl: number = 0, ncl: number = 0) {\n        let gwid = Math.round(PngSheet.width / twid); let uig = image.create(twid, thei); let txi = 0; let tyi = 0;\n        for (let tvn = 0; tvn < GroupChar.length; tvn++) {\n            uig = image.create(twid, thei); txi = twid * (tvn % gwid); tyi = thei * Math.floor(tvn / gwid); drawTransparentImage(PngSheet, uig, 0 - txi, 0 - tyi); setCharecter(tid, GroupChar.charAt(tvn), uig, StayChar.includes(GroupChar.charAt(tvn)), CharOnChar.includes(GroupChar.charAt(tvn)), CharSubW.includes(GroupChar.charAt(tvn)), bcl, scl, mcl, ncl);\n        }\n    }\n\n    /**\n     * add more long glyph array\n     * from charcter sheet\n     * to the table\n     */\n    //%blockid=unifont_setchararrfromimgsheet\n    //%block=\"set |table id $tid and set img sheet $PngSheet=screen_image_picker with array of letters $GroupChar||and | array of staying letters $StayChar array of letters on the letters $CharOnChar and array of Char Substact $CharSubW width $twid height $thei erase col $bcl space col $scl base col $mcl guard col $ncl\"\n    //%tid.shadow=unifont_tablenameshadow tid.defl=\"fonttemp\"\n    //%bcl.shadow=colorindexpicker\n    //%scl.shadow=colorindexpicker\n    //%mcl.shadow=colorindexpicker\n    //%ncl.shadow=colorindexpicker\n    //%group=\"create\"\n    //%weight=6\n    export function setCharArrFromSheet(tid: string = \"fonttemp\", PngSheet: Image = image.create(10, 16), GroupChar: string[] = [], StayChar: string[] = [], CharOnChar: string[] = [], CharSubW: string[] = [], twid: number = 5, thei: number = 8, bcl: number = 0, scl: number = 0, mcl: number = 0, ncl: number = 0) {\n        let gwid = Math.round(PngSheet.width / twid); let uig = image.create(twid, thei); let txi = 0; let tyi = 0;\n        for (let tvn = 0; tvn < GroupChar.length; tvn++) {\n            uig = image.create(twid, thei); txi = twid * (tvn % gwid); tyi = thei * Math.floor(tvn / gwid); drawTransparentImage(PngSheet, uig, 0 - txi, 0 - tyi); setCharecter(tid, GroupChar[tvn], uig, StayChar.indexOf(GroupChar[tvn]) >= 0, CharOnChar.indexOf(GroupChar[tvn]) >= 0, CharSubW.indexOf(GroupChar[tvn]) >= 0, bcl, scl, mcl, ncl);\n        }\n    }\n\n    /**\n     * read the length of\n     * my charcter in table\n     */\n    //%blockid=unifont_numofglyphs\n    //%block=\"number of glyphs in table id $gid\"\n    //%gid.shadow=unifont_tablenameshadow gid.defl=\"fonttemp\"\n    //%group=\"datainfo\"\n    //%weight=2\n    export function NumOfGlyphs(gid: string = \"fonttemp\"): number {\n        let tid = gettableid(gid)\n        return ligs[tid].length\n    }\n\n    /**\n     * read the array charcter image\n     * of my table\n     */\n    //%blockid=unifont_arrofgypimg\n    //%block=\"array of glyph images in table id $gid\"\n    //%gid.shadow=unifont_tablenameshadow gid.defl=\"fonttemp\"\n    //%group=\"datainfo\"\n    //%weight=4\n    export function ImageArray(gid: string = \"fonttemp\"): Image[] {\n        let tid = gettableid(gid)\n        return ligages[tid]\n    }\n\n    /**\n     * read the array charcter\n     * of my table\n     */\n    //%blockid=unifont_arrofglyphs\n    //%block=\"array of glyphs in table id $gid\"\n    //%gid.shadow=unifont_tablenameshadow gid.defl=\"fonttemp\"\n    //%group=\"datainfo\"\n    //%weight=6\n    export function GlyphArray(gid: string = \"fonttemp\"): String[] {\n        let tid = gettableid(gid) \n        return ligs[tid]\n    }\n\n    export function SetTextImgValue(arrm: boolean,input: string, iwidt: number, lid: string, icol: number = 0, bcol: number = 0, alm: number = 0, debugalm: boolean = false, spacew: number = undefined, lineh: number = undefined) {\n        let tid = gettableid(lid)\n        if (rendering) { if (arrm) { return [image.create(1,1)] as Image[] } else { return image.create(1,1) as Image } }\n        rendering = true\n        if (lineh == undefined) { lineh = lineheight}\n        if (spacew == undefined) { spacew = letterspace}\n        let curchar = \"\"; let curchar2 = \"\"; let uhei = 0; let outputarr: Image[] = []; let lnwit: number[] = []; let heig = 0; let widt = 0; let curwidt = 0; let uwidt = 0; let swidt = 0; let nwidt = 0; let wie = 0; let hie = 0; let hvi = 0;\n        for (let currentletter = 0; currentletter < input.length; currentletter++) {\n            curchar = deepChar(tid, currentletter, input)\n            if (!(ligs[tid].indexOf(curchar) < 0)) {\n                uwidt = ligwidth[tid][(ligs[tid].indexOf(curchar))]\n                if (ligwidth[tid][(ligs[tid].indexOf(curchar))] <= 0) {\n                    nwidt = ligages[tid][(ligs[tid].indexOf(curchar))].width\n                } else {\n                    nwidt = 0\n                }\n                if (uwidt > 0) {\n                    swidt = uwidt\n                } else {\n                    swidt = 0\n                }\n                curchar2 = deepChar(tid, currentletter + 1, input)\n                if (curchar2 && Math.abs(ligsubw[tid][ligs[tid].indexOf(curchar2)] - ligwidth[tid][ligs[tid].indexOf(curchar2)]) > 0) {\n                    wie += Math.abs(ligwidth[tid][ligs[tid].indexOf(curchar)] - Math.abs(ligsubw[tid][ligs[tid].indexOf(curchar2)] - ligwidth[tid][ligs[tid].indexOf(curchar2)]))\n                } else if (Math.abs(ligsubw[tid][ligs[tid].indexOf(curchar)] - ligwidth[tid][ligs[tid].indexOf(curchar)]) > 0) {\n                    wie += ligsubw[tid][(ligs[tid].indexOf(curchar))]\n                } else if (ligwidth[tid][(ligs[tid].indexOf(curchar))] > 0) {\n                    wie += Math.abs(uwidt - nwidt)\n                }\n                if ((iwidt <= 0 || !(findCommand(input, \"n\", currentletter))) && (ligwidth[tid][(ligs[tid].indexOf(input.charAt(Math.min(currentletter + Math.max(curchar.length, 1), input.length - 1))))] > 0 || currentletter + (curchar.length - 1) >= input.length - 1)) {\n                    wie += spacew\n                }\n                hvi = ligages[tid][(ligs[tid].indexOf(curchar))].height\n            } else if (input.charAt(currentletter) == \" \") {\n                wie += 3 * spacew\n            } else {\n                wie += 2 * spacew\n            }\n            uhei = Math.max(uhei, hvi)\n            heig = Math.max(heig, hie + hvi)\n            if (iwidt > 0) {\n                if (wie >= iwidt || findCommand(input, \"n\", currentletter)) {\n                    if (uhei > hvi) {\n                        hie += uhei\n                    } else {\n                        hie += hvi\n                    }\n                    hie += lineh\n                    wie = 0;\n                    if (findCommand(input, \"n\", currentletter)) {\n                        currentletter += 2\n                    }\n                }\n            } else if (findCommand(input, \"n\", currentletter)) {\n                currentletter += 2\n            }\n            if (curchar.length - 1 > 0) { currentletter += curchar.length - 1 }\n        }\n        wie = 0; widt = 0; let hix = 0;\n        for (let currentletter2 = 0; currentletter2 < input.length; currentletter2++) {\n            curchar = deepChar(tid, currentletter2, input)\n            if (!(ligs[tid].indexOf(curchar) < 0)) {\n                uwidt = ligwidth[tid][(ligs[tid].indexOf(curchar))]\n                if (ligwidth[tid][(ligs[tid].indexOf(curchar))] <= 0) {\n                    nwidt = ligages[tid][(ligs[tid].indexOf(curchar))].width\n                } else {\n                    nwidt = 0\n                }\n                if (ligwidth[tid][(ligs[tid].indexOf(input.charAt(Math.min(currentletter2 + curchar.length, input.length - 1))))] <= 0) {\n                    swidt = uwidt\n                } else {\n                    swidt = 0\n                }\n                curchar2 = deepChar(tid, currentletter2 + 1, input)\n                if (curchar2 && Math.abs(ligsubw[tid][ligs[tid].indexOf(curchar2)] - ligwidth[tid][ligs[tid].indexOf(curchar2)]) > 0) {\n                    wie += Math.abs(ligwidth[tid][ligs[tid].indexOf(curchar)] - Math.abs(ligsubw[tid][ligs[tid].indexOf(curchar2)] - ligwidth[tid][ligs[tid].indexOf(curchar2)]))\n                } else if (Math.abs(ligsubw[tid][ligs[tid].indexOf(curchar)] - ligwidth[tid][ligs[tid].indexOf(curchar)]) > 0) {\n                    wie += ligsubw[tid][(ligs[tid].indexOf(curchar))]\n                } else if (ligwidth[tid][(ligs[tid].indexOf(curchar))] > 0) {\n                    wie += Math.abs(uwidt - nwidt)\n                }\n                if ((iwidt <= 0 || !(findCommand(input, \"n\", currentletter2))) && (ligwidth[tid][(ligs[tid].indexOf(input.charAt(Math.min(currentletter2 + Math.max(curchar.length, 1), input.length - 1))))] > 0 || currentletter2 + (curchar.length - 1) >= input.length - 1)) {\n                    wie += spacew\n                }\n            } else if (input.charAt(currentletter2) == \" \") {\n                wie += 3 * spacew\n            } else {\n                wie += 2 * spacew\n            }\n            if (false) { widt = Math.max(widt, wie) }\n            if (iwidt > 0) {\n                if (wie >= iwidt || findCommand(input, \"n\", currentletter2)) {\n                    if (debugalm && findCommand(input, \"n\", currentletter2)) {\n                        wie -= (3 * letterspace) + letterspace; widt = Math.max(widt, wie)\n                    } else {\n                        widt = Math.max(widt, wie)\n                    }\n                    lnwit.push(wie); wie = 0; hix += 1\n                    if (findCommand(input, \"n\", currentletter2)) {\n                        currentletter2 += 2\n                    }\n                } else {\n                    widt = Math.max(widt, wie)\n                }\n            } else if (findCommand(input, \"n\", currentletter2)) {\n                widt = Math.max(widt, wie); currentletter2 += 2;\n            } else {\n                widt = Math.max(widt, wie)\n            }\n            if (curchar.length - 1 > 0) { currentletter2 += curchar.length - 1 }\n        }\n        if (hix > 0 && debugalm) { wie += letterspace + (3 * letterspace) }; wie -= letterspace; lnwit.push(wie);\n        let hgi = 0; let limg = image.create(lnwit[hgi], heig); let scwidt = true; let underc = false; let sc = 0; let scnwidt = false; let rimg = image.create(8, 8); let output = image.create(widt, heig); hie = 0; wie = 0; curwidt = 0;\n        let uoutput: Image = image.create(output.width,output.height);\n        if (bcol > 0) { uoutput = image.create(output.width+2,output.height+2) }\n        for (let currentletter3 = 0; currentletter3 < input.length; currentletter3++) {\n            wie = 0; curchar = deepChar(tid, currentletter3, input)\n            if (!(ligs[tid].indexOf(curchar) < 0)) {\n                hvi = ligages[tid][(ligs[tid].indexOf(curchar))].height; uwidt = ligwidth[tid][(ligs[tid].indexOf(curchar))];\n                if (ligwidth[tid][(ligs[tid].indexOf(curchar))] <= 0) {\n                    nwidt = ligages[tid][(ligs[tid].indexOf(curchar))].width\n                } else {\n                    nwidt = 0\n                }\n                scwidt = false; scnwidt = false; wie = 0; rimg = ligages[tid][(ligs[tid].indexOf(curchar))].clone(); let ccol = ligul[tid][ligs[tid].indexOf(input.charAt(currentletter3))];\n                if (ligwidth[tid][ligs[tid].indexOf(input.charAt(Math.min(currentletter3 + curchar.length, input.length - 1)))] > 0 && ligdir[tid][ligs[tid].indexOf(input.charAt(Math.min(currentletter3 + curchar.length, input.length - 1)))] == 0) {\n                    rimg.replace(ccol, ligcol[tid][ligs[tid].indexOf(curchar)])\n                } else if (ligwidth[tid][ligs[tid].indexOf(curchar)] > 0 && ligdir[tid][ligs[tid].indexOf(input.charAt(Math.min(currentletter3 + curchar.length, input.length - 1)))] < 0) {\n                    rimg.replace(ccol, 0)\n                } else if (ligwidth[tid][ligs[tid].indexOf(curchar)] > 0 && ligdir[tid][ligs[tid].indexOf(input.charAt(Math.min(currentletter3 + curchar.length, input.length - 1)))] > 0) {\n                    rimg.replace(ccol, ligcol[tid][ligs[tid].indexOf(curchar)])\n                }\n                if (Math.abs(ligdir[tid][ligs[tid].indexOf(curchar)]) > 0 && Math.abs(ligdir[tid][ligs[tid].indexOf(input.charAt(Math.max(currentletter3 - 1, 0)))]) == 0) {\n                    sc = 1; wie = 0;\n                    while (sc > 0) {\n                        sc = 0\n                        for (let yh = 0; yh < rimg.height; yh++) {\n                            if (limg.getPixel((curwidt - letterspace) - wie, yh) == rimg.getPixel(rimg.width - 1, yh) && (limg.getPixel((curwidt - letterspace) - wie, yh) != 0 && limg.getPixel((curwidt - letterspace) - wie, yh) != 0)) {\n                                sc += 1\n                            }\n                        }\n                        if (sc > 0 || (sc == 0 && wie > 0)) {\n                            wie += 1\n                        }\n                    }\n                }\n                if (wie < 0) { wie = Math.abs(wie) }\n                drawTransparentImage(rimg, limg, curwidt - (nwidt + wie), 0 + (hvi - ligages[tid][(ligs[tid].indexOf(curchar))].height))\n                if (ligwidth[tid][(ligs[tid].indexOf(input.charAt(Math.min(currentletter3 + curchar.length, input.length - 1))))] == 0) {\n                    swidt = uwidt\n                } else {\n                    swidt = 0\n                }\n                curchar2 = deepChar(tid, currentletter3 + 1, input)\n                if (curchar2 && Math.abs(ligsubw[tid][ligs[tid].indexOf(curchar2)] - ligwidth[tid][ligs[tid].indexOf(curchar2)]) > 0) {\n                    curwidt += Math.abs(ligwidth[tid][ligs[tid].indexOf(curchar)] - Math.abs(ligsubw[tid][ligs[tid].indexOf(curchar2)] - ligwidth[tid][ligs[tid].indexOf(curchar2)]))\n                } else if (Math.abs(ligsubw[tid][ligs[tid].indexOf(curchar)] - ligwidth[tid][ligs[tid].indexOf(curchar)]) > 0) {\n                    curwidt += ligsubw[tid][(ligs[tid].indexOf(curchar))]\n                } else if (ligwidth[tid][(ligs[tid].indexOf(curchar))] > 0) {\n                    curwidt += Math.abs(uwidt - nwidt)\n                }\n                if ((iwidt <= 0 || !(findCommand(input, \"n\", currentletter3))) && (ligwidth[tid][(ligs[tid].indexOf(input.charAt(Math.min(currentletter3 + Math.max(curchar.length, 1), input.length - 1))))] > 0 || currentletter3 + (curchar.length - 1) >= input.length - 1)) {\n                    curwidt += spacew\n                }\n            } else if (input.charAt(currentletter3) == \" \") {\n                curwidt += 3 * spacew\n            } else {\n                curwidt += 2 * spacew\n            }\n            uhei = Math.max(uhei, hvi)\n            if (alm < 0) {\n                drawTransparentImage(limg.clone(), output, 0, hie)\n            } else if (alm > 0) {\n                drawTransparentImage(limg.clone(), output, Math.abs(output.width - limg.width), hie)\n            } else if (alm == 0) {\n                drawTransparentImage(limg.clone(), output, Math.abs((output.width / 2) - (limg.width / 2)), hie)\n            }\n            if (icol > 0) {\n                for (let ico = 1; ico < 16; ico++) {\n                    output.replace(ico, icol)\n                }\n            }\n            if (bcol > 0) {uoutput = drawOutline(output.clone(),bcol,true) } else { uoutput = output.clone() }\n            outputarr.push(uoutput.clone())\n            if (iwidt > 0) {\n                if (curwidt >= iwidt || findCommand(input, \"n\", currentletter3)) {\n                    if (alm < 0) {\n                        drawTransparentImage(limg.clone(), output, 0, hie)\n                    } else if (alm > 0) {\n                        drawTransparentImage(limg.clone(), output, Math.abs(output.width - limg.width), hie)\n                    } else if (alm == 0) {\n                        drawTransparentImage(limg.clone(), output, Math.abs((output.width / 2) - (limg.width / 2)), hie)\n                    }\n                    hgi += 1; limg = image.create(lnwit[hgi], heig); curwidt = 0;\n                    if (uhei > hvi) {\n                        hie += uhei\n                    } else {\n                        hie += hvi\n                    }\n                    hie += lineh\n                    if (findCommand(input, \"n\", currentletter3)) {\n                        currentletter3 += 2\n                    }\n                }\n            } else if (findCommand(input, \"n\", currentletter3)) {\n                currentletter3 += 2\n            }\n            if (curchar.length - 1 > 0) { currentletter3 += curchar.length - 1 }\n        }\n        if (alm < 0) {\n            drawTransparentImage(limg.clone(), output, 0, hie)\n        } else if (alm > 0) {\n            drawTransparentImage(limg.clone(), output, Math.abs(output.width - limg.width), hie)\n        } else if (alm == 0) {\n            drawTransparentImage(limg.clone(), output, Math.abs((output.width / 2) - (limg.width / 2)), hie)\n        }\n        if (icol > 0) {\n            for (let ico = 1; ico < 16; ico++) {\n                output.replace(ico, icol)\n            }\n        }\n        if (bcol > 0) { uoutput = drawOutline(output,bcol,true) } else { uoutput = output.clone() }\n        outputarr.push(uoutput.clone())\n        rendering = false\n        if (arrm) { return outputarr as Image[] }\n        output = uoutput.clone()\n        return output as Image\n    }\n    \n    /**\n     * render text from my table\n     * to the image\n     */\n    //%blockid=unifont_setimgfromtext\n    //%block=\"create the image of |text $input in page width $iwidt from table id $tid||and |fill col $icol with outline $bcol and got alignment $alm and get debugalm $debugalm\"\n    //%tid.shadow=unifont_tablenameshadow tid.defl=\"fonttemp\"\n    //%alm.min=-1 alm.max=1 alm.defl=0\n    //%icol.shadow=colorindexpicker\n    //%bcol.shadow=colorindexpicker\n    //%group=\"render\"\n    //%weight=4\n    export function SetTextImage(input: string = \"\", iwidt: number = 0, tid: string = \"fonttemp\", icol: number = 0, bcol: number = 0, alm: number = 0, debugalm: boolean = false,spacew: number = 0, lineh: number = 0) {\n        return SetTextImgValue(false, input, iwidt, tid, icol, bcol, alm, debugalm, spacew, lineh) as Image\n    }\n\n    /**\n     * render text from my table\n     * like basic text animation\n     * to image array\n     */\n    //%blockid=unifont_setimgframefromtext\n    //%block=\"create the image frame of |text $input in page width $iwidt from table id $tid||and |fill col $icol with outline $bcol and got alignment $alm and get debugalm $debugalm\"\n    //%tid.shadow=unifont_tablenameshadow tid.defl=\"fonttemp\"\n    //%alm.min=-1 alm.max=1 alm.defl=0\n    //%icol.shadow=colorindexpicker\n    //%bcol.shadow=colorindexpicker\n    //%group=\"render\"\n    //%weight=2\n    export function SetTextImageArray(input: string = \"\", iwidt: number = 0, tid: string = \"fonttemp\", icol: number = 0, bcol: number = 0, alm: number = 0, debugalm: boolean = false, spacew: number = 0, lineh: number = 0) {\n        return SetTextImgValue(true, input, iwidt, tid, icol, bcol, alm, debugalm, spacew, lineh) as Image[]\n    }\n\n    /** \n     * render text\n     * and stamp to \n     * my dialog frame\n     */\n    //%blockid=unifont_stamptexttoframe\n    //%block=\"StampStrImgToTheDialogFrame $Fimg=dialog_image_picker Text $Txt Text width $Wval TableId $arrid||And text color col $ucol and outline $bcol Alignment $ualm\"\n    //%arrid.shadow=unifont_tablenameshadow arrid.defl=\"fonttemp\"\n    //%ualm.min=-1 ualm.max=1 ualm.defl=0\n    //%ucol.shadow=colorindexpicker\n    //%bcol.shadow=colorindexpicker\n    //%group=\"Dialog render\"\n    //%weight=4\n    export function StampStrToDialog(Fimg: Image, Txt: string = \"\", Wval: number = 0, arrid: string = \"fonttemp\", ucol: number = 0, bcol: number = 0, ualm: number = 0, spacew: number = 0, lineh: number = 0) {\n        let StrImg: Image = SetTextImage(Txt, Wval, arrid, ucol, bcol, ualm, false, spacew, lineh)\n        let gapw = Math.floor(Fimg.width / 3)\n        let gaph = Math.floor(Fimg.height / 3)\n        let UfImg: Image = SetImgFrame(Fimg, StrImg.width + ((gapw * 2) + Math.floor(gapw / 2)), StrImg.height + ((gaph * 2) + Math.floor(gaph / 2)))\n        drawTransparentImage(StrImg.clone(), UfImg, gapw, gaph)\n        return UfImg\n    }\n\n    /**\n     * render text\n     * like basic text animation\n     * and stamp to \n     * my dialog frame\n     * as image array\n     */\n    //%blockid=unifont_stamptextarrtoframe\n    //%block=\"StampStrAnimToDialogFrame $Fimg=dialog_image_picker Text input $Txt In text width $Wval At table id $arrid||and text color $ucol with outline $bcol And alignment $ualm \"\n    //%arrid.shadow=unifont_tablenameshadow arrid.defl=\"fonttemp\"\n    //%ualm.min=-1 ualm.max=1 ualm.defl=0\n    //%ucol.shadow=colorindexpicker\n    //%bcol.shadow=colorindexpicker\n    //%group=\"Dialog render\"\n    //%weight=2\n    export function StampStrArrToDialog(Fimg: Image, Txt: string = \"\", Wval: number = 0, arrid: string = \"fonttemp\", ucol: number = 0, bcol: number = 0, ualm: number = 0,spacew: number = 0, lineh: number = 0) {\n        let StrImg: Image[] = SetTextImageArray(Txt, Wval, arrid, ucol, bcol, ualm, false, spacew, lineh)\n        let gapw = Math.floor(Fimg.width / 3)\n        let gaph = Math.floor(Fimg.height / 3)\n        let UfImg: Image = SetImgFrame(Fimg, StrImg[0].width + ((gapw * 2) + Math.floor(gapw / 2)), StrImg[0].height + ((gaph * 2) + Math.floor(gaph / 2)))\n        let imgArr: Image[] = []\n        let uimg: Image = null\n        for (let mgi = 0; mgi < StrImg.length; mgi++) {\n            uimg = UfImg.clone()\n            drawTransparentImage(StrImg[mgi].clone(), uimg, gapw, gaph)\n            imgArr.push(uimg)\n        }\n        return imgArr\n    }\n\n    /**\n     * set the letterspace by value\n     */\n    //%blockid=unifont_setletterspacing\n    //%block=\"set letter spacing to $input\"\n    //%group=\"modify\"\n    //%weight=8\n    export function SetSpace(input: number) {\n        letterspace = input\n    }\n\n    /**\n     * change the letterspace by value\n     */\n    //%blockid=unifont_changeletterspacing\n    //%block=\"change letter spacing by $input\"\n    //%group=\"modify\"\n    //%weight=6\n    export function ChangeSpace(input: number) {\n        letterspace += input\n    }\n\n    /**\n     * set the line gap by value\n     */\n    //%blockid=unifont_setlinegap\n    //%block=\"set line gap by $input\"\n    //%group=\"modify\"\n    //%weight=4\n    export function SetLine(input: number) {\n        lineheight = input\n    }\n\n    /**\n     * change the line gap by value\n     */\n    //%blockid=unifont_changelinegap\n    //%block=\"change line gap by $input\"\n    //%group=\"modify\"\n    //%weight=2\n    export function ChangeLine(input: number) {\n        lineheight += input\n    }\n\n    export enum align { left, center, right }\n\n    /**\n     * get alignment value\n     */\n    //%blockid=unifont_getalignmentval\n    //%block=\"get $alg of alignment\"\n    //%group=\"modify\"\n    export function getAlign(alg: align) {\n        switch (alg) {\n            case align.left:\n                return -1;\n            case align.center:\n                return 0;\n            case align.right:\n                return 1;\n            default:\n                return 0;\n        }\n    }\n\n    export enum tempfont { MainFont, ArcadeFont }\n\n    /**\n     * set charcter\n     * from template\n     */\n    //%blockid=unifont_presetfont\n    //%block=\"SetupPresetFont $tempf with table id $tid\"\n    //%tid.shadow=unifont_tablenameshadow tid.defl=\"fonttemp\"\n    //%group=\"create\"\n    //%weight=10\n    export function SetupPresetFont(tempf: tempfont, tid: string = \"fonttemp\") {\n        switch (tempf) {\n            case tempfont.MainFont:\n                unidata.mainfont(tid)\n                break;\n            case tempfont.ArcadeFont:\n                unidata.arcadefont(tid)\n                break;\n            default:\n                unidata.mainfont(tid)\n                break;\n        }\n    }\n\n    export function spriteUpdate(Spr: Sprite ) {\n        if (!(Spr)) { return; }\n        if (sprdata.readDataImage(Spr,\"sdim\")) {\n            sprdata.setDataImage(Spr, \"nextimg\", StampStrToDialog(sprdata.readDataImage(Spr, \"sdim\"), sprdata.readDataString(Spr, \"stxt\"), sprdata.readDataNumber(Spr,\"stxw\"),sprdata.readDataString(Spr,\"stid\"),sprdata.readDataNumber(Spr,\"scol\"),sprdata.readDataNumber(Spr,\"socol\"),sprdata.readDataNumber(Spr,\"salg\"),sprdata.readDataNumber(Spr,\"spacew\"),sprdata.readDataNumber(Spr,\"lineh\")))\n        } else {\n            sprdata.setDataImage(Spr, \"nextimg\", SetTextImage(sprdata.readDataString(Spr, \"stxt\"),sprdata.readDataNumber(Spr,\"stxw\"),sprdata.readDataString(Spr,\"stid\"),sprdata.readDataNumber(Spr,\"scol\"),sprdata.readDataNumber(Spr,\"socol\"),sprdata.readDataNumber(Spr,\"salg\"),false,sprdata.readDataNumber(Spr,\"spacew\"),sprdata.readDataNumber(Spr,\"lineh\")))\n        }\n        if (Spr.image.equals(sprdata.readDataImage(Spr,\"nextimg\"))) { return; }\n        Spr.setImage(sprdata.readDataImage(Spr,\"nextimg\"))\n    }\n\n    export enum SprDataNumType {Tcol,Bcol,Tid,PageW,Talg}\n\n    /**\n     * create the unifont as sprite\n     */\n    //%blockid=unifont_sprite_create\n    //%block=\"create unifont sprite as $Text in color $Col with outline $Bcol in alignment $alg and tableid $Tid||and page width $PageW\"\n    //%Tid.shadow=unifont_tablenameshadow Tid.defl=\"fonttemp\"\n    //%Col.shadow=colorindexpicker\n    //%Bcol.shadow=colorindexpicker\n    //%blockSetVariable=\"myUnifont\"\n    //%group=\"sprite mode\"\n    //%weight=22\n    export function newUnifontSprite(Text: string = \"\", Col: number, Bcol: number, alg: align, Tid: string = \"fonttemp\", PageW: number = 0) {\n        let _UnifontSprite = sprites.create(img`\n            .\n        `, SpriteKind._unifont)\n        sprdata.setDataString(_UnifontSprite,\"stxt\",Text)\n        sprdata.setDataNumber(_UnifontSprite,\"scol\",Col)\n        sprdata.setDataString(_UnifontSprite,\"stid\",Tid)\n        sprdata.setDataNumber(_UnifontSprite,\"stxw\",PageW)\n        sprdata.setDataNumber(_UnifontSprite,\"salg\",getAlign(alg))\n        sprdata.setDataNumber(_UnifontSprite,\"spacew\",undefined)\n        sprdata.setDataNumber(_UnifontSprite,\"lineh\",undefined)\n        sprdata.setDataNumber(_UnifontSprite,\"socol\",Bcol)\n        spriteUpdate(_UnifontSprite)\n        _UnifontSprite.setPosition(Math.floor(scene.screenWidth() / 2), Math.floor(scene.screenHeight() / 2))\n        return _UnifontSprite\n    }\n    \n    /**\n     * get text data\n     * from unifont sprite\n     */\n    //%blockid=unifont_sprite_readtxt\n    //%block=\"get $myUnifont as text data\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=18\n    export function getSpriteText(myUnifont:Sprite) {\n        return sprdata.readDataString(myUnifont,\"stxt\")\n    }\n\n    /**\n     * get unifont sprite\n     * in sprite array\n     */\n    //%blockid=unifont_sprite_uniarray\n    //%block=\"array of all unifont sprite\"\n    //%group=\"sprite mode\"\n    //%weight=17\n    export function getSpriteArray() {\n        return sprites.allOfKind(SpriteKind._unifont)\n    }\n\n    /**\n     * get option data number\n     * from unifont sprite\n     */\n    //%blockid=unifont_sprite_readsprdatainnum\n    //%block=\"get $myUnifont from $NumType\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=16\n    export function getSpriteTextData(myUnifont:Sprite,NumType:SprDataNumType) {\n        switch (NumType) {\n            case SprDataNumType.Tcol:\n            return sprdata.readDataNumber(myUnifont,\"scol\");\n            case SprDataNumType.Bcol:\n            return sprdata.readDataNumber(myUnifont,\"socol\")\n            case SprDataNumType.Tid:\n            return sprdata.readDataNumber(myUnifont,\"stid\");\n            case SprDataNumType.PageW:\n            return sprdata.readDataNumber(myUnifont,\"stxw\");\n            case SprDataNumType.Talg:\n            return sprdata.readDataNumber(myUnifont,\"salg\");\n            default:\n            return -1;\n        }\n    }\n\n    /**\n     * set alignment as enum\n     * to unifont sprite\n     */\n    //%blockid=unifont_sprite_setalign\n    //%block=\" $myUnifont=variables_get set align to $alg\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=14\n    export function setSpriteAlign(myUnifont:Sprite,alg:align) {\n        if (sprdata.readDataNumber(myUnifont,\"salg\") == getAlign(alg)) { return; }\n        sprdata.setDataNumber(myUnifont,\"salg\",getAlign(alg))\n        spriteUpdate(myUnifont)\n    }\n\n    /**\n     * set alignment as number\n     * to unifont sprite\n     */\n    //%blockid=unifont_sprite_setalignnum\n    //%block=\" $myUnifont set align value to $aln\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=12\n    export function setSpriteAlignNum(myUnifont:Sprite,aln:number = 0) {\n        if (sprdata.readDataNumber(myUnifont,\"salg\") == aln) { return; }\n        sprdata.setDataNumber(myUnifont,\"salg\",aln)\n        spriteUpdate(myUnifont)\n    }\n\n    /**\n     * add or set dialog frame\n     * to unifont sprite\n     */\n    //%blockid=unifont_sprite_setdialog\n    //%block=\" $myUnifont set dialog frame to $DlImg=dialog_image_picker\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=10\n    export function setSpriteDialogTxt(myUnifont: Sprite,DlImg: Image) {\n        if (sprdata.readDataImage(myUnifont,\"sdim\") && sprdata.readDataImage(myUnifont,\"sdim\").equals(DlImg)) { return; }\n        sprdata.setDataImage(myUnifont,\"sdim\",DlImg)\n        spriteUpdate(myUnifont)\n    }\n\n    /**\n     * remove dialog frame\n     * at unifont sprite\n     */\n    //%blockid=unifont_sprite_cleardialog\n    //%block=\" $myUnifont clear dialog frame\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=9\n    export function clearSpriteDialog(myUnifont: Sprite) {\n        if (!(sprdata.readDataImage(myUnifont,\"sdim\"))) { return; }\n        sprdata.setDataImage(myUnifont,\"sdim\",undefined)\n        spriteUpdate(myUnifont)\n    }\n    \n    export enum spacetype {letterspace,lineheight}\n\n    /**\n     * set gap space \n     * to unifont sprite\n     */\n    //%blockid=unifont_sprite_setlinespace\n    //%block=\" $myUnifont set $gaptype to $value\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=8\n    export function setGapSpr(myUnifont: Sprite, gaptype: spacetype, value: number = 0) {\n        switch (gaptype) {\n        case spacetype.letterspace:\n        if (sprdata.readDataNumber(myUnifont,\"spacew\") == value) { return; }\n        sprdata.setDataNumber(myUnifont,\"spacew\",value)\n        break;\n        case spacetype.lineheight:\n        if (sprdata.readDataNumber(myUnifont,\"lineh\") == value) { return; }\n        sprdata.setDataNumber(myUnifont,\"lineh\",value)\n        break;\n        default:\n        return;\n        }\n        spriteUpdate(myUnifont)\n    }\n\n    /**\n     * clear gap space\n     * at unifont sprite\n     */\n    //%blockid=unifont_sprite_setdefaultlinespace\n    //%block=\" $myUnifont set $gaptype to default value\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=7\n    export function setDefaultGapSpr(myUnifont: Sprite, gaptype: spacetype) {\n        switch (gaptype) {\n        case spacetype.letterspace:\n        if (sprdata.readDataNumber(myUnifont,\"spacew\") == undefined) { return; }\n        sprdata.setDataNumber(myUnifont,\"spacew\",undefined)\n        break;\n        case spacetype.lineheight:\n        if (sprdata.readDataNumber(myUnifont,\"lineh\") == undefined) { return; }\n        sprdata.setDataNumber(myUnifont,\"lineh\",undefined)\n        break;\n        default:\n        return;\n        }\n        spriteUpdate(myUnifont)\n    }\n\n    /**\n     * set text to render\n     * to unifont sprite\n     */\n    //%blockid=unifont_sprite_settextdata\n    //%block=\" $myUnifont set text to $Text\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=20\n    export function setSpriteText(myUnifont: Sprite,Text: string = \"\") {\n        if (sprdata.readDataString(myUnifont,\"stxt\") == Text) { return; }\n        sprdata.setDataString(myUnifont,\"stxt\",Text)\n        spriteUpdate(myUnifont)\n    }\n\n    export enum colortype {solidcolor,outlinecolor}\n\n    /**\n     * set text color index\n     * to unifont sprite\n     */\n    //%blockid=unifont_sprite_settextcolor\n    //%block=\" $myUnifont set $colortexttype to $ncolor\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%ncolor.shadow=colorindexpicker\n    //%group=\"sprite mode\"\n    //%weight=6\n    export function setSpriteTextCol(myUnifont: Sprite,colortexttype:colortype,ncolor: number = 0) {\n        switch (colortexttype) {\n        case colortype.solidcolor:\n        if (sprdata.readDataNumber(myUnifont,\"scol\") == ncolor) { return; }\n        sprdata.setDataNumber(myUnifont,\"scol\",ncolor)\n        break;\n        case colortype.outlinecolor:\n        if (sprdata.readDataNumber(myUnifont,\"socol\") == ncolor) { return; }\n        sprdata.setDataNumber(myUnifont,\"socol\",ncolor)\n        break;\n        default:\n        return;\n        }\n        spriteUpdate(myUnifont)\n    }\n\n    /**\n     * set table id \n     * to unifont sprite\n     */\n    //%blockid=unifont_sprite_settableid\n    //%block=\" $myUnifont set Table id to $Tid\"\n    //%Tid.shadow=unifont_tablenameshadow Tid.defl=\"fonttemp\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=2\n    export function setSpriteTableId(myUnifont: Sprite,Tid: string = \"fonttemp\") {\n        if (sprdata.readDataString(myUnifont,\"stid\") == Tid) { return; }\n        sprdata.setDataString(myUnifont,\"stid\",Tid)\n        spriteUpdate(myUnifont)\n    }\n\n    /**\n     * set page width\n     * to unifont sprite\n     */\n    //%blockid=unifont_sprite_setpagewidth\n    //%block=\" $myUnifont set page width to $PageW\"\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=4\n    export function setSpritePageWidth(myUnifont: Sprite, PageW: number = 0) {\n        if (sprdata.readDataNumber(myUnifont,\"stxw\") == PageW) { return; }\n        sprdata.setDataNumber(myUnifont,\"stxw\",PageW)\n        spriteUpdate(myUnifont)\n    }\n\n    export enum delaytype {delaypermsec,multisec}\n\n    /**\n     * play text animation\n     * from unifont sprite\n     */\n    //%blockid=unifont_sprite_playanimatiom\n    //%block=\" $myUnifont get animation play for pause type $delaymode in (ms) $secval||and paused $pausev\"\n    //%secval.defl=100\n    //%myUnifont.shadow=variables_get myUnifont.defl=myUnifont\n    //%group=\"sprite mode\"\n    //%weight=1\n    export function getSpriteAnimPlay(myUnifont: Sprite,delaymode:delaytype,secval:number,pausev:boolean=false) {\n        if (sprdata.readDataBoolean(myUnifont, \"anim\")) return;\n        sprdata.setDataNumber(myUnifont,\"scval\",0)\n        let umsec = 0; let lensec = 0;\n        if (sprdata.readDataImage(myUnifont, \"sdim\")) {\n            sprdata.setDataImageArray(myUnifont, \"imgarr\", StampStrArrToDialog(sprdata.readDataImage(myUnifont, \"sdim\"), sprdata.readDataString(myUnifont, \"stxt\"), sprdata.readDataNumber(myUnifont, \"stxw\"), sprdata.readDataString(myUnifont, \"stid\"), sprdata.readDataNumber(myUnifont, \"scol\"), sprdata.readDataNumber(myUnifont, \"socol\"), sprdata.readDataNumber(myUnifont, \"salg\"), sprdata.readDataNumber(myUnifont, \"spacew\"), sprdata.readDataNumber(myUnifont, \"lineh\")))\n        } else {\n            sprdata.setDataImageArray(myUnifont, \"imgarr\", SetTextImageArray(sprdata.readDataString(myUnifont, \"stxt\"), sprdata.readDataNumber(myUnifont, \"stxw\"), sprdata.readDataString(myUnifont, \"stid\"), sprdata.readDataNumber(myUnifont, \"scol\"), sprdata.readDataNumber(myUnifont, \"socol\"), sprdata.readDataNumber(myUnifont, \"salg\"), false, sprdata.readDataNumber(myUnifont, \"spacew\"), sprdata.readDataNumber(myUnifont, \"lineh\")))\n        }\n        switch (delaymode) {\n            case delaytype.delaypermsec:\n                sprdata.setDataNumber(myUnifont,\"scval\",secval)\n                umsec = secval\n                lensec = secval * sprdata.readDataImageArray(myUnifont, \"imgarr\").length\n            break;\n            case delaytype.multisec:\n                sprdata.setDataNumber(myUnifont,\"scval\",secval / sprdata.readDataImageArray(myUnifont,\"imgarr\").length)\n                umsec = secval\n                lensec = secval\n            break;\n            default:\n            return;\n        }\n        sprdata.setDataNumber(myUnifont, \"sidx\", 0)\n        if (pausev) {\n            sprdata.setDataBoolean(myUnifont, \"anim\", true)\n            sprdata.setDataBoolean(myUnifont, \"anip\", false)\n            background( function() {\n                for (let i = 0; i < sprdata.readDataImageArray(myUnifont, \"imgarr\").length; i++) {\n                    myUnifont.setImage(sprdata.readDataImageArray(myUnifont, \"imgarr\")[i])\n                    pause(sprdata.readDataNumber(myUnifont, \"scval\"))\n                }\n            })\n            myUnifont.setImage(sprdata.readDataImage(myUnifont, \"nextimg\"))\n            sprdata.setDataBoolean(myUnifont, \"anim\", false)\n            return;\n        }\n        if (!sprdata.readDataBoolean(myUnifont, \"anim\") && !(sprdata.readDataBoolean(myUnifont, \"anip\"))) {\n            sprdata.setDataBoolean(myUnifont, \"anip\", true)\n            sprdata.setDataBoolean(myUnifont, \"anim\", true)\n            animation.runImageAnimation(myUnifont, sprdata.readDataImageArray(myUnifont, \"imgarr\"), sprdata.readDataNumber(myUnifont, \"scval\"), false)\n        } else if (myUnifont.image.equals(sprdata.readDataImage(myUnifont, \"nextimg\"))) {\n            sprdata.setDataBoolean(myUnifont, \"anip\", false)\n            sprdata.setDataBoolean(myUnifont, \"anim\", false)\n        }\n        after( lensec, function () {\n            sprdata.setDataBoolean(myUnifont, \"anip\", false)\n            sprdata.setDataBoolean(myUnifont, \"anim\", false)\n            myUnifont.setImage(sprdata.readDataImage(myUnifont, \"nextimg\"))\n        })\n    }\n}\n\n","pxt.json":"{\n    \"name\": \"unifont\",\n    \"version\": \"6.0.0\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"main-data.ts\",\n        \"sprite-more-data.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"1.12.58\",\n        \"targetId\": \"arcade\"\n    },\n    \"supportedTargets\": [\n        \"arcade\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","sprite-more-data.ts":"namespace sprdata {\n    \n    /**\n     * Sets a number in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataSetNumber block=\"set $sprite=variables_get data $name to number $value\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataNumberNameShadow\"\n    //% group=\"Data\"\n    //% weight=10\n    //% blockGap=8\n    export function setDataNumber(sprite: Sprite, name: string, value: number) {\n        if (!sprite || !name) return;\n        const d = sprite.data;\n        d[name] = value;\n    }\n\n    /**\n     * Change a number in the data of a sprite by a given value\n     */\n    //% blockId=sprdata_spriteDataChangeNumber block=\"change $sprite=variables_get data $name by number $value\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataNumberNameShadow\"\n    //% group=\"Data\"\n    //% weight=10\n    //% blockGap=8\n    export function changeDataNumberBy(sprite: Sprite, name: string, value: number) {\n        if (!sprite || !name) return;\n        const d = sprite.data;\n        d[name] = (d[name] || 0) + value;\n    }\n\n    /**\n     * Gets a number in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataGetNumber block=\"$sprite=variables_get data $name as number\"\n    //% name.shadow=\"sprdata_spriteDataNumberNameShadow\"\n    //% blockHidden=true\n    //% group=\"Data\"\n    //% weight=10\n    //% blockGap=8\n    export function readDataNumber(sprite: Sprite, name: string): number {\n        if (!sprite || !name) return 0;\n        const d = sprite.data;\n        return d[name] as number;\n    }\n    \n    /**\n     * Sets a number array in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataSetNumberArray block=\"set $sprite=variables_get data $name to number array $value\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataNumberArrayNameShadow\"\n    //% group=\"Data array\"\n    //% weight=10\n    //% blockGap=8\n    export function setDataNumberArray(sprite: Sprite, name: string, value: number[]) {\n        if (!sprite || !name) return;\n        const d = sprite.data;\n        d[name] = value;\n    }\n\n    /**\n     * Gets a number array in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataGetNumberArray block=\"$sprite=variables_get data $name as number array\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataNumberArrayNameShadow\"\n    //% group=\"Data array\"\n    //% weight=10\n    //% blockGap=8\n    export function readDataNumberArray(sprite: Sprite, name: string): number[] {\n        if (!sprite || !name) return undefined;\n        const d = sprite.data;\n        return d[name] as number[];\n    }\n\n    /**\n     * Sets a string in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataSetString block=\"set $sprite=variables_get data $name to string $value\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataStringNameShadow\"\n    //% group=\"Data\"\n    //% weight=10\n    //% blockGap=8\n    export function setDataString(sprite: Sprite, name: string, value: string) {\n        if (!sprite || !name) return;\n        const d = sprite.data;\n        d[name] = value;\n    }\n\n    /**\n     * Gets a string in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataGetString block=\"$sprite=variables_get data $name as string\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataStringNameShadow\"\n    //% group=\"Data\"\n    //% weight=10\n    //% blockGap=8\n    export function readDataString(sprite: Sprite, name: string): string {\n        if (!sprite || !name) return \"\";\n        const d = sprite.data;\n        return d[name] as string;\n    }\n\n    /**\n     * Sets a string array in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataSetStringArray block=\"set $sprite=variables_get data $name to string array $value\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataStringArrayNameShadow\"\n    //% group=\"Data array\"\n    //% weight=10\n    //% blockGap=8\n    export function setDataStringArray(sprite: Sprite, name: string, value: string[]) {\n        if (!sprite || !name) return;\n        const d = sprite.data;\n        d[name] = value;\n    }\n\n    /**\n     * Gets a string array in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataGetStringArray block=\"$sprite=variables_get data $name as string array\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataStringArrayNameShadow\"\n    //% group=\"Data array\"\n    //% weight=10\n    //% blockGap=8\n    export function readDataStringArray(sprite: Sprite, name: string): string[] {\n        if (!sprite || !name) return undefined;\n        const d = sprite.data;\n        return d[name] as string[];\n    }\n\n    /**\n     * Sets a boolean in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataSetBoolean block=\"set $sprite=variables_get data $name to boolean $value\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataBooleanNameShadow\"\n    //% group=\"Data\"\n    //% weight=10\n    //% blockGap=8\n    export function setDataBoolean(sprite: Sprite, name: string, value: boolean) {\n        if (!sprite || !name) return;\n        const d = sprite.data;\n        d[name] = !!value;\n    }\n\n    /**\n     * Gets a boolean in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataGetBoolean block=\"$sprite=variables_get data $name as boolean\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataBooleanNameShadow\"\n    //% group=\"Data\"\n    //% weight=10\n    //% blockGap=8\n    export function readDataBoolean(sprite: Sprite, name: string): boolean {\n        if (!sprite || !name) return false;\n        const d = sprite.data;\n        return !!d[name];\n    }\n    \n\n    /**\n     * Sets a boolean array in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataSetBooleanArray block=\"set $sprite=variables_get data $name to boolean array $value\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataBooleanArrayNameShadow\"\n    //% group=\"Data array\"\n    //% weight=10\n    //% blockGap=8\n    export function setDataBooleanArray(sprite: Sprite, name: string, value: boolean[]) {\n        if (!sprite || !name) return;\n        const d = sprite.data;\n        d[name] = value;\n    }\n\n    /**\n     * Gets a boolean array in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataGetBooleanArray block=\"$sprite=variables_get data $name as boolean array\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataBooleanArrayNameShadow\"\n    //% group=\"Data array\"\n    //% weight=10\n    //% blockGap=8\n    export function readDataBooleanArray(sprite: Sprite, name: string): boolean[] {\n        if (!sprite || !name) return undefined;\n        const d = sprite.data;\n        return d[name] as boolean[];\n    }\n\n    /**\n     * Sets a sprite in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataSetSprite block=\"set $sprite=variables_get data $name to sprite $value\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataSpriteNameShadow\"\n    //% group=\"Data\"\n    //% weight=10\n    //% blockGap=8\n    export function setDataSprite(sprite: Sprite, name: string, value: Sprite) {\n        if (!sprite || !name) return;\n        const d = sprite.data;\n        d[name] = value;\n    }\n\n    /**\n     * Gets a sprite in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataGetSprite block=\"$sprite=variables_get data $name as sprite\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataSpriteNameShadow\"\n    //% group=\"Data\"\n    //% weight=10\n    //% blockGap=8\n    export function readDataSprite(sprite: Sprite, name: string): Sprite {\n        if (!sprite || !name) return undefined;\n        const d = sprite.data;\n        return d[name] as Sprite;\n    }\n\n    /**\n     * Sets a sprite array in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataSetSpriteArray block=\"set $sprite=variables_get data $name to sprite array $value\"\n    //% blockHidden=true\n    //% value.shadow=\"lists_create_with\"\n    //% name.shadow=\"sprdata_spriteDataSpriteNameShadow\"\n    //% group=\"Data array\"\n    //% weight=10\n    //% blockGap=8\n    export function setDataSpriteArray(sprite: Sprite, name: string, value: Sprite[]) {\n        if (!sprite || !name) return;\n        const d = sprite.data;\n        d[name] = value;\n    }\n\n    /**\n     * Gets a sprite array in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataGetSpriteArray block=\"$sprite=variables_get data $name as sprite array\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataSpriteArrayNameShadow\"\n    //% group=\"Data array\"\n    //% weight=10\n    //% blockGap=8\n    export function readDataSpriteArray(sprite: Sprite, name: string): Sprite[] {\n        if (!sprite || !name) return undefined;\n        const d = sprite.data;\n        return d[name] as Sprite[];\n    }\n    \n    /**\n     * Sets an Image in the data of a sprite.\n     * Deprecated. Use setDataImageValue instead\n     */\n    //% blockId=sprdata_spriteDataSetImage block=\"set $sprite=variables_get data $name to image $value\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataImageNameShadow\"\n    //% group=\"Data\"\n    //% deprecated=1\n    //% weight=9\n    //% blockGap=8\n    export function setDataImage(sprite: Sprite, name: string, value: Image) {\n        setDataImageValue(sprite, name, value);\n    }\n\n    /**\n     * Sets an Image in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataSetImageValue block=\"set $sprite data $name to image $value\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataImageNameShadow\"\n    //% group=\"Data\"\n    //% sprite.shadow=variables_get\n    //% value.shadow=screen_image_picker\n    //% weight=9\n    //% blockGap=8\n    export function setDataImageValue(sprite: Sprite, name: string, value: Image) {\n        if (!sprite || !name) return;\n        const d = sprite.data;\n        d[name] = value;\n    }\n\n    /**\n     * Gets a sprite in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataGetImage block=\"$sprite=variables_get data $name as image\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataImageNameShadow\"\n    //% group=\"Data\"\n    //% weight=9\n    //% blockGap=8\n    export function readDataImage(sprite: Sprite, name: string): Image {\n        if (!sprite || !name) return undefined;\n        const d = sprite.data;\n        return d[name] as Image;\n    }\n\n    /**\n     * Sets an Image array in the data of a sprite.\n     * Deprecated. Use setDataImageValue instead\n     */\n    //% blockId=sprdata_spriteDataSetImageArray block=\"set $sprite=variables_get data $name to image array $value\"\n    //% blockHidden=true\n    //% value.shadow=\"lists_create_with\" value.defl=screen_image_picker\n    //% name.shadow=\"sprdata_spriteDataImageArrayNameShadow\"\n    //% group=\"Data array\"\n    //% deprecated=1\n    //% weight=9\n    //% blockGap=8\n    export function setDataImageArray(sprite: Sprite, name: string, value: Image[]) {\n        setDataImageValueArray(sprite, name, value);\n    }\n\n    /**\n     * Sets an Image array in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataSetImageValueArray block=\"set $sprite data $name to image array $value\"\n    //% blockHidden=true\n    //% value.shadow=\"lists_create_with\" value.defl=screen_image_picker\n    //% name.shadow=\"sprdata_spriteDataImageArrayNameShadow\"\n    //% group=\"Data array\"\n    //% sprite.shadow=variables_get\n    //% weight=9\n    //% blockGap=8\n    export function setDataImageValueArray(sprite: Sprite, name: string, value: Image[]) {\n        if (!sprite || !name) return;\n        const d = sprite.data;\n        d[name] = value;\n    }\n\n    /**\n     * Gets a sprite in the data of a sprite\n     */\n    //% blockId=sprdata_spriteDataGetImageArray block=\"$sprite=variables_get data $name as image array\"\n    //% blockHidden=true\n    //% name.shadow=\"sprdata_spriteDataImageArrayNameShadow\"\n    //% group=\"Data array\"\n    //% weight=9\n    //% blockGap=8\n    export function readDataImageArray(sprite: Sprite, name: string): Image[] {\n        if (!sprite || !name) return undefined;\n        const d = sprite.data;\n        return d[name] as Image[];\n    }\n\n    //% block=\"$name\"\n    //% blockId=sprdata_spriteDataNumberNameShadow\n    //% blockHidden=true shim=TD_ID\n    //% name.fieldEditor=\"autocomplete\" name.fieldOptions.decompileLiterals=true\n    //% name.fieldOptions.key=\"spritedatanumber\"\n    export function _numberNameShadow(name: string) {\n        return name\n    }\n\n    //% block=\"$name\"\n    //% blockId=sprdata_spriteDataNumberArrayNameShadow\n    //% blockHidden=true shim=TD_ID\n    //% name.fieldEditor=\"autocomplete\" name.fieldOptions.decompileLiterals=true\n    //% name.fieldOptions.key=\"spritedatanumberarray\"\n    export function _numberArrayNameShadow(name: string) {\n        return name\n    }\n\n    //% block=\"$name\"\n    //% blockId=sprdata_spriteDataSpriteNameShadow\n    //% blockHidden=true shim=TD_ID\n    //% name.fieldEditor=\"autocomplete\" name.fieldOptions.decompileLiterals=true\n    //% name.fieldOptions.key=\"spritedatasprite\"\n    export function _spriteNameShadow(name: string) {\n        return name\n    }\n\n    //% block=\"$name\"\n    //% blockId=sprdata_spriteDataSpriteArrayNameShadow\n    //% blockHidden=true shim=TD_ID\n    //% name.fieldEditor=\"autocomplete\" name.fieldOptions.decompileLiterals=true\n    //% name.fieldOptions.key=\"spritedataspritearray\"\n    export function _spriteArrayNameShadow(name: string) {\n        return name\n    }\n\n    //% block=\"$name\"\n    //% blockId=sprdata_spriteDataBooleanNameShadow\n    //% blockHidden=true shim=TD_ID\n    //% name.fieldEditor=\"autocomplete\" name.fieldOptions.decompileLiterals=true\n    //% name.fieldOptions.key=\"spritedataboolean\"\n    export function _booleanNameShadow(name: string) {\n        return name\n    }\n\n    //% block=\"$name\"\n    //% blockId=sprdata_spriteDataBooleanArrayNameShadow\n    //% blockHidden=true shim=TD_ID\n    //% name.fieldEditor=\"autocomplete\" name.fieldOptions.decompileLiterals=true\n    //% name.fieldOptions.key=\"spritedatabooleanarray\"\n    export function _booleanArrayNameShadow(name: string) {\n        return name\n    }\n\n    //% block=\"$name\"\n    //% blockId=sprdata_spriteDataStringNameShadow\n    //% blockHidden=true shim=TD_ID\n    //% name.fieldEditor=\"autocomplete\" name.fieldOptions.decompileLiterals=true\n    //% name.fieldOptions.key=\"spritedatastring\"\n    export function _stringNameShadow(name: string) {\n        return name\n    }\n\n    //% block=\"$name\"\n    //% blockId=sprdata_spriteDataStringArrayNameShadow\n    //% blockHidden=true shim=TD_ID\n    //% name.fieldEditor=\"autocomplete\" name.fieldOptions.decompileLiterals=true\n    //% name.fieldOptions.key=\"spritedatastringarray\"\n    export function _stringArrayNameShadow(name: string) {\n        return name\n    }\n\n    //% block=\"$name\"\n    //% blockId=sprdata_spriteDataImageNameShadow\n    //% blockHidden=true shim=TD_ID\n    //% name.fieldEditor=\"autocomplete\" name.fieldOptions.decompileLiterals=true\n    //% name.fieldOptions.key=\"spritedataimage\"\n    export function _imageNameShadow(name: string) {\n        return name\n    }\n\n    //% block=\"$name\"\n    //% blockId=sprdata_spriteDataImageArrayNameShadow\n    //% blockHidden=true shim=TD_ID\n    //% name.fieldEditor=\"autocomplete\" name.fieldOptions.decompileLiterals=true\n    //% name.fieldOptions.key=\"spritedataimagearray\"\n    export function _imageArrayNameShadow(name: string) {\n        return name\n    }\n}\n\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}